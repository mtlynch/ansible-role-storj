#!/bin/sh

# Exit immediately on error.
set -e

# Echo to console.
set -x

cd tests/

cp "Dockerfile-${distro}" Dockerfile

# Customize image.
image_tag="${distro}:ansible"
docker build \
  --rm=true \
  --tag="${image_tag}" .

# Run container in detached state
id_file=$(mktemp)
DISPLAY=":1"
docker run \
  --detach \
  --volume="${PWD}":/etc/ansible/roles/role_under_test:ro \
  -w "/tmp" \
  $run_opts \
  -e "DISPLAY=${DISPLAY}" \
  $image_tag $init > "$id_file"
container_id="$(cat $id_file)"
echo "Container ID:" "$container_id"

printf "$container_id ansible_connection=docker\n" > hosts

# Print ansible version.
ansible --version

# Create a symlink to the role under test (removing previous if it existed)
mkdir -p roles
rm roles/role_under_test || true
ln -s ../../ roles/role_under_test

# Ansible syntax check.
ansible-playbook test.yml --syntax-check

# Check that role installs successfully.
ansible-playbook test.yml

# Test role idempotence.
idempotence_file=$(mktemp)
ansible-playbook test.yml \
  | tee "${idempotence_file}"
grep -q 'changed=0.*failed=0' "${idempotence_file}" && \
  (echo 'Idempotence test: pass' && exit 0) || \
  (echo 'Idempotence test: fail' && exit 1)

# Clean up
docker stop "${container_id}"
docker rm "${container_id}"
rm Dockerfile

# Check role for linter errors.
ansible-lint test.yml -t role_under_test
